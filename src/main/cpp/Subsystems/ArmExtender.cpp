// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#include "Subsystems/ArmExtender.h"
#include "Commands/retractArmConditionally.h"
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES
// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

ArmExtender::ArmExtender() : frc::Subsystem("ArmExtender") {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    selArmExtender.reset(new frc::DoubleSolenoid(0, 0, 1));

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
}

void ArmExtender::InitDefaultCommand() {
    // Set the default command for a subsystem here.
    // SetDefaultCommand(new MySpecialCommand());
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
    
}

void ArmExtender::Periodic() {
    // Put code here to be run every loop

}

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CMDPIDGETTERS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CMDPIDGETTERS


// Put methods for controlling this subsystem
// here. Call these from Commands.
void ArmExtender::ArmOut(){
     double boomPos = Robot::boomer->GetBoomPos();
        double safeOverride = Robot::oi->getJoystick2()->GetRawAxis(2);
        if (safeOverride > 0.25){
            if (selArmExtender->Get() != frc::DoubleSolenoid::kForward){
                selArmExtender->Set(frc::DoubleSolenoid::kForward);
            }
        }
        else{
            if (boomPos < -5 &&( boomPos > -17.54 || boomPos < -120)){
                if (selArmExtender->Get() != frc::DoubleSolenoid::kForward){
                    selArmExtender->Set(frc::DoubleSolenoid::kForward);
                }
            }
        }
        //selArmExtender->Set(frc::DoubleSolenoid::kForward);
}
void ArmExtender::ArmIn(){
    // frc::SmartDashboard::PutString("cOMMAND", "Armin");
     if (selArmExtender->Get() != frc::DoubleSolenoid::kReverse){
        selArmExtender->Set(frc::DoubleSolenoid::kReverse);
    }
	//selArmExtender->Set(frc::DoubleSolenoid::kReverse);
}
void ArmExtender::Stop(){
	selArmExtender->Set(frc::DoubleSolenoid::kOff);
}
