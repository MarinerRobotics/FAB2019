// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#include "OI.h"

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES
#include "frc/smartdashboard/SmartDashboard.h"
#include "Commands/AutonomousCommand.h"
#include "Commands/CloseClaw.h"
#include "Commands/DownShift.h"
#include "Commands/DriveBackJackedUp.h"
#include "Commands/DriveForwardJackedUp.h"
#include "Commands/DriveWithJoy.h"
#include "Commands/ExtendArm.h"
#include "Commands/LowerBoom.h"
#include "Commands/LowerClaw.h"
#include "Commands/LowerJacks.h"
#include "Commands/OpenClaw.h"
#include "Commands/PunchBall.h"
#include "Commands/RaiseBoom.h"
#include "Commands/RaiseClaw.h"
#include "Commands/RaiseJacks.h"
#include "Commands/RetractArm.h"
#include "Commands/UpShift.h"


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES

OI::OI() {
    // Process operator interface input here.
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    joystick2.reset(new frc::Joystick(1));
    
    joystick1.reset(new frc::Joystick(0));
    
    joystickButton2.reset(new frc::JoystickButton(joystick1.get(), 2));
    joystickButton2->WhileHeld(new CloseClaw());
    joystickButton1.reset(new frc::JoystickButton(joystick1.get(), 1));
    joystickButton1->WhileHeld(new OpenClaw());

    // SmartDashboard Buttons
    frc::SmartDashboard::PutData("RetractArm", new RetractArm());
    frc::SmartDashboard::PutData("ExtendArm", new ExtendArm());
    frc::SmartDashboard::PutData("PunchBall", new PunchBall());
    frc::SmartDashboard::PutData("DownShift", new DownShift());
    frc::SmartDashboard::PutData("UpShift", new UpShift());
    frc::SmartDashboard::PutData("DriveBackJackedUp", new DriveBackJackedUp());
    frc::SmartDashboard::PutData("DriveForwardJackedUp", new DriveForwardJackedUp());
    frc::SmartDashboard::PutData("LowerClaw", new LowerClaw());
    frc::SmartDashboard::PutData("RaiseClaw", new RaiseClaw());
    frc::SmartDashboard::PutData("LowerBoom", new LowerBoom());
    frc::SmartDashboard::PutData("RaiseBoom", new RaiseBoom());
    frc::SmartDashboard::PutData("LowerJacks", new LowerJacks());
    frc::SmartDashboard::PutData("RaiseJacks", new RaiseJacks());
    frc::SmartDashboard::PutData("CloseClaw", new CloseClaw());
    frc::SmartDashboard::PutData("OpenClaw", new OpenClaw());
    frc::SmartDashboard::PutData("DriveWithJoy", new DriveWithJoy());
    frc::SmartDashboard::PutData("Autonomous Command", new AutonomousCommand());

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
}

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS

std::shared_ptr<frc::Joystick> OI::getJoystick1() {
   return joystick1;
}

std::shared_ptr<frc::Joystick> OI::getJoystick2() {
   return joystick2;
}


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS
