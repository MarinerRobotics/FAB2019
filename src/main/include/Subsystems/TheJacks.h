// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#ifndef THEJACKS_H
#define THEJACKS_H
#include "frc/commands/Subsystem.h"
#include "frc/WPILib.h"
#include "rev/CanSparkMax.h"

/**
 *
 *
 * @author ExampleAuthor
 */
class TheJacks: public frc::Subsystem {
private:
	// It's desirable that everything possible is private except
	// for methods that implement subsystem capabilities
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
	std::shared_ptr<rev::CANSparkMax> cANSparkMAXJacksBack;
	std::shared_ptr<rev::CANSparkMax> cANSparkMAXJacksFront;
	std::shared_ptr<frc::DigitalInput> frontJacksRaiseLimit;
	std::shared_ptr<frc::DigitalInput> frontJacksLowerLimit;
	std::shared_ptr<frc::DigitalInput> backJacksRaiseLimit;
	std::shared_ptr<frc::DigitalInput> backJacksLowerLimit;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
public:
	TheJacks();
	void InitDefaultCommand() override;
	void Periodic() override;
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS
void RaiseJacksInBack();
void LowerJacksInBack();
void Stop();
rev::CANEncoder backJack_encoder = cANSparkMAXJacksBack->GetEncoder();
void RaiseJacksInFront();
void LowerJacksInFront();
void RaiseBoth();
void LowerBoth();
rev::CANEncoder frontJack_encoder = cANSparkMAXJacksFront->GetEncoder();
void StopBack();
void StopFront();
};

#endif
